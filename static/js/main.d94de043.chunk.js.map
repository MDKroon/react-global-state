{"version":3,"sources":["../../src/index.js","components/Box.js","components/SplitText.js","components/GlobalState.js","components/InputWithDispatch.js","components/SelectWithDispatch.js","components/StateUpdater.js","components/Demo.js","App.js","index.js","components/demo.module.css"],"names":["AppContext","createContext","StateProvider","initialState","displayName","children","useReducer","action","state","dispatch","value","useContextState","globalState","useContext","Box","title","bgColor","className","style","box","join","SplitText","splitted","split","map","item","index","length","key","GlobalState","id","player","score","settings","mode","volume","notes","InputWithDispatch","type","name","property","defaultValue","splitText","placeholder","inputType","addButton","addButtons","onChange","labelName","useState","content","setContent","inputWithDispatch","htmlFor","inline","e","target","onKeyDown","data-lpignore","onClick","height","getContent","SelectWithDispatch","options","stateValue","selectWithDispatch","option","StateUpdater","Demo","demo","column","href","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d94de043.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from 'react'\n\nconst AppContext = createContext({})\n\nexport const StateProvider = ({\n  initialState = {},\n  displayName = 'ReactGlobalState',\n  children\n}) => {\n  AppContext.displayName = displayName\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'UPDATE':\n        if (action.property) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: action.value\n            }\n          }\n        } else {\n          return {\n            ...state,\n            [action.name]: action.value\n          }\n        }\n      case 'ADD':\n        if (action.property) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: state[action.name][action.property] + action.value\n            }\n          }\n        } else {\n          return {\n            ...state,\n            [action.name]: state[action.name] + action.value\n          }\n        }\n      case 'RESET':\n        if (action.property && action.name) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: initialState[action.name][action.property]\n            }\n          }\n        } else if (action.name) {\n          return {\n            ...state,\n            [action.name]: initialState[action.name]\n          }\n        } else {\n          return {\n            ...initialState\n          }\n        }\n      default:\n        throw new Error()\n    }\n  }, initialState)\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useContextState = () => {\n  const globalState = useContext(AppContext)\n  const { state, dispatch } = globalState\n\n  return { state, dispatch }\n}\n","import React from 'react'\nimport style from './demo.module.css'\n\nconst Box = ({title, children, bgColor = null}) => {\n  return <div className={[style.box, bgColor ? style[bgColor] : ''].join(' ')}> \n    <div className={style.title}>\n      <strong>{title}</strong>\n    </div>\n    <hr/>\n    {children}\n  </div>\n}\n\nexport default Box","import React, { Fragment } from 'react'\n\nconst SplitText = ({children}) => {\n  if (!children) {\n    return null\n  }\n\n  const splitted = children.split('\\n')\n\n  return <Fragment>\n    {splitted.map((item, index) => {\n      if (item.length === 0) {\n        return <br key={index}/>\n      } else if (splitted.length - 1 === index) {\n        return <span key={index}>{item}</span>\n      } else {\n        return <span key={index}>{item}<br/></span>\n      }\n    })}\n  </Fragment>\n}\n\nexport default SplitText","import React from 'react'\r\nimport { useContextState } from 'react-global-state'\r\nimport Box from './Box'\r\nimport SplitText from './SplitText'\r\nimport style from './demo.module.css'\r\n\r\nconst GlobalState = () => {\r\n  // get state from useContextState hook\r\n  const { state } = useContextState()\r\n\r\n  return (\r\n    <Box title='global state' bgColor='grey'>\r\n      <code>\r\n        {'{'}\r\n          <div className={style.globalState}>\r\n            <strong>id:</strong> {state.id}<br/>\r\n            <strong>player:</strong> {state.player}<br/>\r\n            <strong>score:</strong> {state.score}<br/>\r\n            <strong>settings:</strong> {'{'}\r\n              <ul>\r\n                <li><strong>mode:</strong> {state.settings.mode}</li>\r\n                <li><strong>volume:</strong> {state.settings.volume}</li>\r\n              </ul>\r\n            {'}'}<br/>\r\n            <strong>notes:</strong><br/>\r\n            <SplitText>{state.notes}</SplitText><br/>\r\n          </div>\r\n        {'}'}\r\n      </code>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GlobalState","import { Spacer } from '@mdkroon/react-ui-components'\nimport React, { Fragment, useState } from 'react'\nimport { useContextState } from 'react-global-state'\nimport SplitText from './SplitText'\nimport style from './demo.module.css'\n\nconst InputWithDispatch = ({type = 'UPDATE', name, property = null, defaultValue = null, splitText = false,\n    placeholder = 'Type some text', inputType = 'text', addButton = false, addButtons = false}) => {\n\n  // get state and dispatch function from useContextState hook\n  const { state, dispatch } = useContextState()\n\n  // dispatch change to the global state\n  const onChange = (value) => {\n    dispatch({type, name, property, value})\n  }\n\n  const getContent = () => {\n    const content = property ? state[name][property] : state[name]\n    return splitText ? <SplitText>{content}</SplitText> : content\n  }\n\n  const labelName = property ? property : name\n  const [content, setContent] = useState(null)\n\n  return (\n    <div className={style.inputWithDispatch}>\n        <label htmlFor={`${labelName}-input`}>\n          {type} {labelName}\n        </label>\n        {addButton ? <div className={style.inline}>\n          <input\n            type={inputType}\n            id={`${labelName}-input`}\n            name={labelName}\n            placeholder={placeholder}\n            defaultValue={defaultValue}\n            onChange={(e) => setContent(e.target.value)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                onChange('\\n' + e.target.value)\n                e.target.value = ''\n              }}\n            }\n            data-lpignore='true'\n          />\n          <button onClick={() => onChange('\\n' + content)}>Add</button>\n        </div> : addButtons ? <Fragment>\n          <Spacer height={4}/>\n          <button onClick={() => onChange(1)}>Add 1</button>\n          <button onClick={() => onChange(-1)}>Substract 1</button>\n          <button onClick={() => onChange(10)}>Add 10</button>\n          <button onClick={() => onChange(-10)}>Substract 10</button>\n        </Fragment> : <input\n          type={inputType}\n          id={`${labelName}-input`}\n          name={labelName}\n          placeholder={placeholder}\n          defaultValue={defaultValue}\n          onChange={(e) => onChange(e.target.value)}\n          data-lpignore='true'\n        />}\n        <Spacer height={4}/>\n        <div>\n          <span>{labelName}:</span> {addButton && <br/>}{getContent()}\n        </div>\n    </div>\n  )\n}\n\nexport default InputWithDispatch","import { Spacer } from '@mdkroon/react-ui-components'\nimport React from 'react'\nimport { useContextState } from 'react-global-state'\nimport style from './demo.module.css'\n\nconst SelectWithDispatch = ({type = 'UPDATE', name, property = '', options}) => {\n\n  // get state and dispatch function from useContextState hook\n  const { state, dispatch } = useContextState()\n\n  // dispatch change to the global state\n  const onChange = (value) => {\n    dispatch({type, name, property, value})\n  }\n\n  const labelName = property ? property : name\n  const stateValue = property ? state[name][property] : state[name]\n  const getOptions = () => {\n    return options.map((option, index) => {\n        return <option value={option} key={index}>{option}</option>\n    })\n  }\n\n  return (\n    <div className={style.selectWithDispatch}>\n        <label htmlFor={`${labelName}-select`}>\n          {type} {labelName}\n        </label>\n        <select\n          name={name}\n          id={`${labelName}-select`}\n          defaultValue={stateValue}\n          onChange={(e) => onChange(e.target.value)}\n        >\n          {getOptions()}\n        </select>\n        <Spacer height={4}/>\n        <div><span>{labelName}:</span> {stateValue}</div>\n    </div>\n  )\n}\n\nexport default SelectWithDispatch","import { Spacer } from '@mdkroon/react-ui-components'\r\nimport React, { Fragment } from 'react'\r\nimport { useContextState } from 'react-global-state'\r\nimport Box from './Box'\r\nimport InputWithDispatch from './InputWithDispatch'\r\nimport SelectWithDispatch from './SelectWithDispatch'\r\n\r\nconst StateUpdater = () => {\r\n  // get state and dispatch function from useContextState hook\r\n  const { state, dispatch } = useContextState()\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box title='change string variable'>\r\n        <InputWithDispatch\r\n          name='player'\r\n          placeholder='Type some text to update'\r\n        />\r\n        <Spacer height={24}/>\r\n        <InputWithDispatch\r\n          type='ADD'\r\n          name='notes'\r\n          placeholder='Type some text to add'\r\n          addButton\r\n          splitText\r\n        />\r\n      </Box>\r\n      <Box title='change integer variable'>\r\n        <InputWithDispatch\r\n          name='id'\r\n          placeholder='Type integer to update'\r\n        />\r\n        <Spacer height={24}/>\r\n        <InputWithDispatch\r\n          type='ADD'\r\n          name='score'\r\n          placeholder={state.score}\r\n          inputType='number'\r\n          addButtons\r\n        />\r\n      </Box>\r\n      <Box title='change object'>\r\n        <SelectWithDispatch\r\n          name='settings'\r\n          property='mode'\r\n          options={['easy', 'advanced', 'wizard']}\r\n        />\r\n        <Spacer height={24}/>\r\n        <InputWithDispatch\r\n          name='settings'\r\n          property='volume'\r\n          defaultValue={state.settings.volume}\r\n          inputType='number'\r\n        />\r\n      </Box>\r\n      <Box title='reset'>\r\n        <Spacer height={8}/>\r\n        <button onClick={() => dispatch({type: 'RESET'})}>\r\n          Reset state to initial state\r\n        </button>\r\n      </Box>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default StateUpdater","import { Spacer } from '@mdkroon/react-ui-components'\r\nimport React from 'react'\r\nimport { StateProvider } from 'react-global-state'\r\nimport GlobalState from './GlobalState'\r\nimport StateUpdater from './StateUpdater'\r\nimport style from './demo.module.css'\r\n\r\n// define initial global state\r\nconst initialState = {\r\n  id: 1,\r\n  player: 'John',\r\n  score: 0,\r\n  settings: {\r\n    mode: 'easy',\r\n    volume: 10,\r\n  },\r\n  notes: 'Account created on 5-9-2020 21:23'\r\n}\r\n\r\n// wrap state provider around your app content\r\nconst Demo = () => {\r\n\r\n  return (\r\n    <StateProvider initialState={initialState}>\r\n      <div className={style.demo}>\r\n        <Spacer height={30}/>\r\n        <header>\r\n          <h1>Demo 'React Global State'</h1>\r\n          <p>combination of the Context Api and the useReducer hook</p>\r\n        </header>\r\n        <Spacer height={30}/>\r\n        <main>\r\n          <div className={style.column}>\r\n              <StateUpdater/>\r\n            </div>\r\n            <div className={style.column}>\r\n              <GlobalState />\r\n          </div>\r\n        </main>\r\n        <Spacer height={30}/>\r\n        <footer>\r\n          GNU GPLv3 © <a href='https://github.com/MDKroon'>Matthijs Kroon</a>\r\n        </footer>\r\n      </div>\r\n    </StateProvider>\r\n  )\r\n}\r\n\r\nexport default Demo","import React from 'react'\r\nimport Demo from './components/Demo'\r\n\r\nconst App = () => {\r\n  return <Demo/>\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo\":\"demo_demo__1VcR5\",\"column\":\"demo_column__2YNK6\",\"box\":\"demo_box__3UGvI\",\"grey\":\"demo_grey__2DI8S\",\"title\":\"demo_title__2M5sT\",\"globalState\":\"demo_globalState__3QP9d\",\"selectWithDispatch\":\"demo_selectWithDispatch__OuZF1\",\"inputWithDispatch\":\"demo_inputWithDispatch__JetUk\",\"inline\":\"demo_inline__3sNYS\"};"],"sourceRoot":""}