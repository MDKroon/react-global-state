{"version":3,"sources":["components/demo.module.css","../../src/index.js","components/Box.js","components/GlobalState.js","components/Spacer.js","components/InputWithDispatch.js","components/SelectWithDispatch.js","components/StateUpdater.js","components/Demo.js","App.js","index.js"],"names":["module","exports","AppContext","createContext","StateProvider","initialState","displayName","children","useReducer","action","state","dispatch","value","useContextState","globalState","useContext","Box","title","bgColor","className","style","box","join","GlobalState","id","player","score","settings","mode","volume","notes","Spacer","size","padding","InputWithDispatch","type","name","property","defaultValue","placeholder","inputType","addButtons","onChange","labelName","inputWithDispatch","htmlFor","onClick","e","target","data-lpignore","SelectWithDispatch","options","stateValue","selectWithDispatch","map","option","index","key","StateUpdater","Demo","demo","column","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55e3be29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo\":\"demo_demo__1VcR5\",\"column\":\"demo_column__2YNK6\",\"box\":\"demo_box__3UGvI\",\"grey\":\"demo_grey__2DI8S\",\"title\":\"demo_title__2M5sT\",\"globalState\":\"demo_globalState__3QP9d\",\"selectWithDispatch\":\"demo_selectWithDispatch__OuZF1\",\"inputWithDispatch\":\"demo_inputWithDispatch__JetUk\"};","import React, { createContext, useReducer, useContext } from 'react'\n\nconst AppContext = createContext({})\n\nexport const StateProvider = ({\n  initialState = {},\n  displayName = 'ReactGlobalState',\n  children\n}) => {\n  AppContext.displayName = displayName\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'UPDATE':\n        if (action.property) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: action.value\n            }\n          }\n        } else {\n          return {\n            ...state,\n            [action.name]: action.value\n          }\n        }\n      case 'ADD':\n        if (action.property) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: state[action.name][action.property] + action.value\n            }\n          }\n        } else {\n          return {\n            ...state,\n            [action.name]: state[action.name] + action.value\n          }\n        }\n      case 'RESET':\n        if (action.property && action.name) {\n          return {\n            ...state,\n            [action.name]: {\n              ...state[action.name],\n              [action.property]: initialState[action.name][action.property]\n            }\n          }\n        } else if (action.name) {\n          return {\n            ...state,\n            [action.name]: initialState[action.name]\n          }\n        } else {\n          return {\n            ...initialState\n          }\n        }\n      default:\n        throw new Error()\n    }\n  }, initialState)\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nexport const useContextState = () => {\n  const globalState = useContext(AppContext)\n  const { state, dispatch } = globalState\n\n  return { state, dispatch }\n}\n","import React from 'react'\nimport style from './demo.module.css'\n\nconst Box = ({title, children, bgColor = null}) => {\n  return <div className={[style.box, bgColor ? style[bgColor] : ''].join(' ')}> \n    <div className={style.title}>\n      <strong>{title}</strong>\n    </div>\n    <hr/>\n    {children}\n  </div>\n}\n\nexport default Box","import React from 'react'\r\nimport { useContextState } from 'react-global-state'\r\nimport Box from './Box'\r\nimport style from './demo.module.css'\r\n\r\nconst GlobalState = () => {\r\n  // get state from useContextState hook\r\n  const { state } = useContextState()\r\n\r\n  return (\r\n    <Box title='global state' bgColor='grey'>\r\n      <code>\r\n        {'{'}\r\n          <div className={style.globalState}>\r\n            <strong>id:</strong> {state.id}<br/>\r\n            <strong>player:</strong> {state.player}<br/>\r\n            <strong>score:</strong> {state.score}<br/>\r\n            <strong>settings:</strong> {'{'}\r\n              <ul>\r\n                <li><strong>mode:</strong> {state.settings.mode}</li>\r\n                <li><strong>volume:</strong> {state.settings.volume}</li>\r\n              </ul>\r\n            {'}'}<br/>\r\n            <strong>notes:</strong> {state.notes}<br/>\r\n          </div>\r\n        {'}'}\r\n      </code>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GlobalState","import React from 'react'\n\nconst Spacer = ({size}) => {\n    return <div style={{padding: `${size/2}px 0`}}/>\n}\n\nexport default Spacer","import React, { Fragment } from 'react'\nimport { useContextState } from 'react-global-state'\nimport Spacer from './Spacer'\nimport style from './demo.module.css'\n\nconst InputWithDispatch = ({type = 'UPDATE', name, property = null, defaultValue = null,\n    placeholder = 'Type some text', inputType = 'text', addButtons = false}) => {\n\n  // get state and dispatch function from useContextState hook\n  const { state, dispatch } = useContextState()\n\n  // dispatch change to the global state\n  const onChange = (value) => {\n    dispatch({type, name, property, value})\n  }\n\n  const labelName = property ? property : name\n\n  return (\n    <div className={style.inputWithDispatch}>\n        <label htmlFor={`${labelName}-input`}>\n          {type} {labelName}\n        </label>\n        {!addButtons ?\n          <input\n            type={inputType}\n            id={`${labelName}-input`}\n            name={labelName}\n            placeholder={placeholder}\n            defaultValue={defaultValue}\n            onChange={(e) => onChange(e.target.value)}\n            data-lpignore='true'\n          /> : <Fragment>\n            <Spacer size='4'/>\n            <button onClick={() => onChange(1)}>Add 1</button>\n            <button onClick={() => onChange(-1)}>Substract 1</button>\n            <button onClick={() => onChange(10)}>Add 10</button>\n            <button onClick={() => onChange(-10)}>Substract 10</button>\n          </Fragment>\n        }\n        <Spacer size='4'/>\n        <div><span>{labelName}:</span> {property ? state[name][property] : state[name]}</div>\n    </div>\n  )\n}\n\nexport default InputWithDispatch","import React, { Fragment } from 'react'\nimport { useContextState } from 'react-global-state'\nimport Spacer from './Spacer'\nimport style from './demo.module.css'\n\nconst SelectWithDispatch = ({type = 'UPDATE', name, property = '', options}) => {\n\n  // get state and dispatch function from useContextState hook\n  const { state, dispatch } = useContextState()\n\n  // dispatch change to the global state\n  const onChange = (value) => {\n    dispatch({type, name, property, value})\n  }\n\n  const labelName = property ? property : name\n  const stateValue = property ? state[name][property] : state[name]\n  const getOptions = () => {\n    return options.map((option, index) => {\n        return <option value={option} key={index}>{option}</option>\n    })\n  }\n\n  return (\n    <div className={style.selectWithDispatch}>\n        <label htmlFor={`${labelName}-select`}>\n          {type} {labelName}\n        </label>\n        <select\n          name={name}\n          id={`${labelName}-select`}\n          defaultValue={stateValue}\n          onChange={(e) => onChange(e.target.value)}\n        >\n          {getOptions()}\n        </select>\n        <Spacer size='4'/>\n        <div><span>{labelName}:</span> {stateValue}</div>\n    </div>\n  )\n}\n\nexport default SelectWithDispatch","import React, { Fragment } from 'react'\r\nimport { useContextState } from 'react-global-state'\r\nimport Box from './Box'\r\nimport Spacer from './Spacer'\r\nimport InputWithDispatch from './InputWithDispatch'\r\nimport SelectWithDispatch from './SelectWithDispatch'\r\n\r\nconst StateUpdater = () => {\r\n  // get state and dispatch function from useContextState hook\r\n  const { state, dispatch } = useContextState()\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box title='change string variable'>\r\n        <InputWithDispatch\r\n          name='player'\r\n          placeholder='Type some text to update'\r\n        />\r\n        <Spacer size='24'/>\r\n        <InputWithDispatch\r\n          type='ADD'\r\n          name='notes'\r\n          placeholder='Type some text to add'\r\n        />\r\n      </Box>\r\n      <Box title='change integer variable'>\r\n        <InputWithDispatch\r\n          name='id'\r\n          placeholder='Type integer to update'\r\n        />\r\n        <Spacer size='24'/>\r\n        <InputWithDispatch\r\n          type='ADD'\r\n          name='score'\r\n          placeholder={state.score}\r\n          inputType='number'\r\n          addButtons\r\n        />\r\n      </Box>\r\n      <Box title='change object'>\r\n        <SelectWithDispatch\r\n          name='settings'\r\n          property='mode'\r\n          options={['easy', 'advanced', 'wizard']}\r\n        />\r\n        <Spacer size='24'/>\r\n        <InputWithDispatch\r\n          name='settings'\r\n          property='volume'\r\n          defaultValue={state.settings.volume}\r\n          inputType='number'\r\n        />\r\n      </Box>\r\n      <Box title='reset'>\r\n        <Spacer size='8'/>\r\n        <button onClick={() => dispatch({type: 'RESET'})}>\r\n          Reset state to initial state\r\n        </button>\r\n      </Box>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default StateUpdater","import React from 'react'\r\nimport { StateProvider } from 'react-global-state'\r\nimport GlobalState from './GlobalState'\r\nimport Spacer from './Spacer'\r\nimport StateUpdater from './StateUpdater'\r\nimport style from './demo.module.css'\r\n\r\n// define initial global state\r\nconst initialState = {\r\n  id: 1,\r\n  player: 'John',\r\n  score: 0,\r\n  settings: {\r\n    mode: 'easy',\r\n    volume: 10,\r\n  },\r\n  notes: 'Account created on 5-9-2020 21:23'\r\n}\r\n\r\n// wrap state provider around your app content\r\nconst Demo = () => {\r\n\r\n  return (\r\n    <StateProvider initialState={initialState}>\r\n      <div className={style.demo}>\r\n        <Spacer size='30'/>\r\n        <header>\r\n          <h1>Demo 'React Global State'</h1>\r\n        </header>\r\n        <Spacer size='30'/>\r\n        <main>\r\n          <div className={style.column}>\r\n              <StateUpdater/>\r\n            </div>\r\n            <div className={style.column}>\r\n              <GlobalState />\r\n          </div>\r\n        </main>\r\n        <Spacer size='30'/>\r\n        <footer>\r\n          GNU GPLv3 © <a href='https://github.com/MDKroon'>Matthijs Kroon</a>\r\n        </footer>\r\n      </div>\r\n    </StateProvider>\r\n  )\r\n}\r\n\r\nexport default Demo","import React from 'react'\r\nimport Demo from './components/Demo'\r\n\r\nconst App = () => {\r\n  return <Demo/>\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}